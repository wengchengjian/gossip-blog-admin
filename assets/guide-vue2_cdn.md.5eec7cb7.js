import{_ as s,o as a,c as n,d as l}from"./app.d991dbbc.js";const C=JSON.parse('{"title":"CDN 支持","description":"","frontmatter":{},"headers":[],"relativePath":"guide-vue2/cdn.md"}'),p={name:"guide-vue2/cdn.md"},e=l(`<h1 id="cdn-支持" tabindex="-1">CDN 支持 <a class="header-anchor" href="#cdn-支持" aria-hidden="true">#</a></h1><p>开启 CDN 的好处在于，项目中引用的一些第三方库不会打包进项目内，从而减小打包出的文件体积，同时借用 CDN 的优势，大大提高项目加载速度。</p><p>CDN 支持默认不开启，如果需要开启，则在 <code>.env.production</code> 生产环境配置文件中修改：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">VUE_APP_CDN = ON</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>CDN 配置文件存放在项目根目录下的 <code>dependencies.cdn.js</code> 文件里，可按照标准格式自行扩展配置。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">library</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">js</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">css</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>其中 <code>name</code> 和 <code>library</code> 最终会转成 webpack 中 externals 的配置项， <code>name</code> 是引入的包名， <code>library</code> 是全局变量。</p><p>设置好并开启后，原先文件中通过 <code>import</code> 进行引入的包，就不需要引入了，代码可以删掉，但是删掉会触发 ESLint 的错误提示，例如：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;">// import Vue from &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> api </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./api</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line highlighted"><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$api </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> api </span><span style="color:#676E95;font-style:italic;">// 这行代码会提示 &#39;Vue&#39; is not defined.</span></span>
<span class="line"></span></code></pre></div><p>解决这个问题就需要在 <code>.eslintrc.js</code> 文件中对 <code>globals</code> 对象增加 <code>Vue</code> 的属性。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#FFCB6B;">globals</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#FFCB6B;">process</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#FFCB6B;">require</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#FFCB6B;">module</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#F07178;">	</span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">注意</p><ol><li>如果只在生产环境开启 CDN 支持，请确保第三方库的 CDN 版本与本地依赖包的版本一致，以免出现开发环境是正常的，但生产环境缺不行的情况，也就是因为版本不同造成的 bug</li><li>开发环境开启 CDN 支持后会导致 <a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd" target="_blank" rel="noreferrer">Vue.js devtools</a> 无法使用，所以不建议开发环境开启</li></ol></div>`,12),o=[e];function c(t,r,i,F,y,d){return a(),n("div",null,o)}const h=s(p,[["render",c]]);export{C as __pageData,h as default};
