import{_ as s,o as a,c as e,d as n}from"./app.d991dbbc.js";const C=JSON.parse('{"title":"Vuex","description":"","frontmatter":{},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"settings","slug":"settings","link":"#settings","children":[]},{"level":2,"title":"keepAlive","slug":"keepalive","link":"#keepalive","children":[]},{"level":2,"title":"menu","slug":"menu","link":"#menu","children":[]},{"level":2,"title":"tabbar","slug":"tabbar","link":"#tabbar","children":[]},{"level":2,"title":"user","slug":"user","link":"#user","children":[]}],"relativePath":"guide-vue2/vuex.md"}'),l={name:"guide-vue2/vuex.md"},p=n(`<h1 id="vuex" tabindex="-1">Vuex <a class="header-anchor" href="#vuex" aria-hidden="true">#</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-hidden="true">#</a></h2><p>Vuex 同样实现了自动注册，开发只需关注 <code>./store/modules/</code> 文件夹里的文件即可，请根据模块区分文件。</p><p>新建模板：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// example.js</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> state </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> getters </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> actions </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> mutations </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">namespaced</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    state</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    actions</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    getters</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    mutations</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>文件默认开启命名空间，文件名会默认注册为模块名，使用方法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$store</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">example</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">xxx</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$store</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">getters[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">example/xxx</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$store</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dispatch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">example/xxx</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$store</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">commit</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">example/xxx</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="settings" tabindex="-1">settings <a class="header-anchor" href="#settings" aria-hidden="true">#</a></h2><p>负责存放配置相关数据，不建议在该文件进行二次开发。</p><h2 id="keepalive" tabindex="-1">keepAlive <a class="header-anchor" href="#keepalive" aria-hidden="true">#</a></h2><p>负责记录页面缓存的组件 <code>name</code> 名，不建议在该文件进行二次开发。</p><h2 id="menu" tabindex="-1">menu <a class="header-anchor" href="#menu" aria-hidden="true">#</a></h2><p>负责生成导航菜单的路由数据，不建议在该文件进行二次开发。</p><h2 id="tabbar" tabindex="-1">tabbar <a class="header-anchor" href="#tabbar" aria-hidden="true">#</a></h2><p>负责记录标签栏状态，不建议在该文件进行二次开发。</p><p>当配置开启标签栏功能时，页面组件的 <code>name</code> 会在打开页面时自动加入缓存列表，如果页面无需缓存，则不设置 <code>name</code> 即可，注意，是页面组件的 <code>name</code> ，不是路由的 <code>name</code> 。</p><p>固定的标签会将数据存放到 <code>localStorage</code> 里。</p><h2 id="user" tabindex="-1">user <a class="header-anchor" href="#user" aria-hidden="true">#</a></h2><p>负责实现用户的登录、登出，以及用户信息处理。</p><p>这个文件是需要二次开发的，其中 <code>getters.isLogin</code>、<code>dispatch(&#39;login&#39;)</code>、<code>commit(&#39;setUserData&#39;)</code>、<code>commit(&#39;removeUserData&#39;)</code> 为必须修改的地方，主要负责校验是否登录、登录操作、登录成功记录用户信息、登出清除用户信息。</p><p>按框架的设计，用户登录时不获取权限数据，登录成功后通过 <code>dispatch(&#39;getPermissions&#39;)</code> 获取用户权限数据，如果你的系统是在登录时就能拿到用户权限数据，那在这个方法里可以只保留一句 <code>resolve(permissions)</code> ，只需将权限数据 resolve 出去即可。</p>`,21),o=[p];function t(c,r,i,D,d,y){return a(),e("div",null,o)}const A=s(l,[["render",t]]);export{C as __pageData,A as default};
